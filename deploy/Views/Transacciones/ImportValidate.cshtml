@model IEnumerable<GastosAppMvc.Infrastructure.TransImportItem>
@{
    ViewBag.Title = "ImportValidate";
}
<script src="@Url.Content("~/Scripts/knockout-latest.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/knockout.mapping-latest.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>

<h2>ImportValidate</h2>

<form>
 <p>You have asked for <span data-bind="text: transImportItems().length">&nbsp;</span> item(s)</p>
<div id="content">
<table>
    <tbody data-bind="template: { name: 'transImportItemRowTemplate', foreach: transImportItems }"></tbody>
</table>
 
<script type="text/html" id="transImportItemRowTemplate">
    <tr>
       <td>Fecha:  <input data-bind="date: Fecha" name="Fecha"/></td>
       <td>Descripcion:  <input data-bind="value: Descripcion"/></td>
        <td>Monto: $ <input data-bind="value: Monto" step="0.01" type="number"/></td>
        <td>
        <select id="Concepto" 
            data-bind='
                options: viewModel.listaConcepto, 
                optionsValue : "ConceptoId", 
                optionsText: "NombreConPadre", 
                optionsCaption: "[Please select a concept]", 
                value: Concepto.ConceptoId'>
        </select>
        </td>
        <td><input type="checkbox" data-bind="checked: bSalvar" /></td>
    </tr>
</script>


</div>
    <button data-bind="enable: transImportItems().length > 0" type="submit">Submit</button>
</form>
<div id="footer">
            </div>


@section scripts {
<script language="javascript" type="text/javascript">
ko.bindingHandlers.date = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {
    //debugger;
        var jsonDate = valueAccessor();
        var value = new Date(parseInt(jsonDate().substr(6)));
        var ret = value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
        $(element).val(ret);
        var value2 = valueAccessor();
            value2($(element).val());
        $(element).blur(function() {
            var value = valueAccessor();
            value($(element).val());
        }); 
    },
    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {
            // First get the latest data that we're bound to
        var value = valueAccessor(), allBindings = allBindingsAccessor();
         
        // Next, whether or not the supplied model property is observable, get its current value
        var valueUnwrapped = ko.utils.unwrapObservable(value); 
         //debugger;
         if ((valueUnwrapped === null) || (valueUnwrapped === undefined)) {
            valueUnwrapped = "";
            }
    }
};

var initialData = @Html.Raw(Json.Encode(Model));
var supportData1 = @Html.Raw(Json.Encode(ViewBag.Conceptos));

debugger;
var viewModel =  {
    self : this,
    transImportItems: ko.mapping.fromJS(initialData),
    listaConcepto : ko.observableArray(supportData1)

}
viewModel.save = function () 
        {
        debugger;
        ko.utils.postJson('@Url.Action("ImportValidate", "Transacciones")', { transImportItems: ko.mapping.toJS(viewModel.transImportItems) });
        };

$(document).ready(function () { 
    ko.applyBindings(viewModel); 
    $("#Fecha").datepicker();
    });
$("form").validate({ submitHandler: function() { viewModel.save() } });
</script>
}